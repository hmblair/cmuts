#!/bin/bash

# set -euo pipefail

# Check if dependencies are installed
command -v samtools >/dev/null 2>&1 || { echo >&2 "Samtools is required but it's not installed. Exiting."; exit 1; }
command -v mpirun >/dev/null 2>&1 || { echo >&2 "MPI (mpirun) is required but it's not installed. Exiting."; exit 1; }

__time() {
    if [[ $(uname) == Darwin ]]; then
        /usr/bin/time -l "$@"
    else
        /usr/bin/time -f "$@"
    fi
}

__get_field() {
    local line="$1"
    local keyword="$2"
    echo "$line" | awk -v kw="$keyword" '{for(i=1; i<=NF; i++) {if ($i == kw) {print $(i+1); break}}}'
}

generate() {
    local REFERENCES=$1
    local QUERIES=$2
    local LENGTH=$3
    local OUTPUT=$4
    local MIN_MAPQ=$5
    local MIN_PHRED=$6
    local MIN_LENGTH=$7
    local MAX_LENGTH=$8
    local MAX_INDEL=$9
    local WINDOW=${10}
    local COLLAPSE=${11}
    local THREADS=${12}

    local SAM="aln_${REFERENCES}_${QUERIES}_${LENGTH}.sam"
    local BAM="aln_${REFERENCES}_${QUERIES}_${LENGTH}.bam"
    local BAM_TMP="aln_${REFERENCES}_${QUERIES}_${LENGTH}_tmp.bam"
    local FASTA="seq_${REFERENCES}_${QUERIES}_${LENGTH}.fasta"

    if [ ! -f ${BAM} ]; then

        cmuts-generate-tests \
            --length ${LENGTH} \
            --queries ${QUERIES} \
            --references ${REFERENCES} \
            --out-fasta ${FASTA} \
            --out-sam ${SAM} \
            --out-h5 ${OUTPUT} \
            --min-mapq ${MIN_MAPQ} \
            --min-phred ${MIN_PHRED} \
            --min-length ${MIN_LENGTH} \
            --max-length ${MAX_LENGTH} \
            --max-indel-length ${MAX_INDEL} \
            --quality-window ${WINDOW} \
            --collapse ${COLLAPSE}

        samtools calmd -b -@${THREADS} ${SAM} ${FASTA} > ${BAM_TMP} 
        samtools sort -@${THREADS} -o ${BAM} ${BAM_TMP} > /dev/null 2>&1

        rm -rf ${SAM} ${BAM_TMP} ${OUTPUT}

    fi
}

profile() {
    local RUNS=$1
    local FASTA=$2
    local OUTPUT=$3
    local MIN_MAPQ=$4
    local MIN_PHRED=$5
    local WINDOW=$6
    local MIN_LENGTH=$7
    local MAX_LENGTH=$8
    local MAX_INDEL=$9
    local BAM=${10}
    local RF_DIR=${11}
    local THREADS=${12}
    local LOWMEM=${13}


    min_time=""
    min_mem=""

    for ((i=0; i<${RUNS}; i++)); do

        result=$(__time mpirun -np ${THREADS} cmuts \
            --fasta ${FASTA} \
            --output ${OUTPUT} \
            --min-mapq ${MIN_MAPQ} \
            --min-phred ${MIN_PHRED} \
            --quality-window ${WINDOW} \
            --min-length ${MIN_LENGTH} \
            --max-length ${MAX_LENGTH} \
            --max-indel-length ${MAX_INDEL} \
            --overwrite \
            ${LOWMEM} \
            ${BAM} 2>&1 >/dev/null)
            rm -rf ${CMUTS_H5}

        result=$(echo "$result" | tr -d '\n')

        exec_time=$(__get_field "$result" "real")
        mem_usage=$(__get_field "$result" "elapsed")

        if [[ -z "$min_time" || $(echo "$exec_time < $min_time" | bc -l) -eq 1 ]]; then
            min_time=$exec_time
        fi

        if [[ -z "$min_mem" || "$mem_usage" -lt "$min_mem" ]]; then
            min_mem=$mem_usage
        fi

    done

    min_mem=$(echo "scale=2; $min_mem / (1024 * 1024)" | bc)

    echo "   cmuts:"
    echo "    Minimum execution time: $min_time seconds"
    echo "    Minimum memory usage: $min_mem MB"

    min_time=""
    min_mem=""

    for ((i=0; i<${RUNS}; i++)); do

        rm -rf ${RF_DIR}
        mkdir ${RF_DIR}
        cd ${RF_DIR}

        result=$(__time rf-count -m \
            -wt ${THREADS} \
            -f ../${FASTA} \
            --fast \
            ../${BAM} 2>&1 > /dev/null)

        cd ..

        result=$(echo "$result" | tr -d '\n')

        exec_time=$(__get_field "$result" "real")
        mem_usage=$(__get_field "$result" "elapsed")

        if [[ -z "$min_time" || $(echo "$exec_time < $min_time" | bc -l) -eq 1 ]]; then
            min_time=$exec_time
        fi

        if [[ -z "$min_mem" || "$mem_usage" -lt "$min_mem" ]]; then
            min_mem=$mem_usage
        fi

    done

    min_mem=$(echo "scale=2; $min_mem / (1024 * 1024)" | bc)

    echo "   rf-count:"
    echo "    Minimum execution time: $min_time seconds"
    echo "    Minimum memory usage: $min_mem MB"

}

RUNS=1
THREADS=1

QUERIES_SET=false
REFERENCES_SET=false
LENGTHS_SET=false
LOWMEM=""

while [[ "$#" -gt 0 ]]; do
    case $1 in
        --runs) shift
                RUNS=${1:-1}
                ;;
        --threads) shift
                   THREADS=${1:-1}
                   ;;
        --queries) QUERIES_SET=true
                   ;;
        --references) REFERENCES_SET=true
                      ;;
        --lengths) LENGTHS_SET=true
                   ;;
        --low-mem) LOWMEM="--low-mem"
                   ;;
        *) echo "Unknown option: $1"
           exit 1
           ;;
    esac
    shift
done

SCRIPT_DIR=$(pwd)
CASES_DIR=${SCRIPT_DIR}"/.cases"
mkdir -p ${CASES_DIR}

MIN_MAPQ=20
MIN_PHRED=20
WINDOW=2
MIN_LENGTH=2
MAX_INDEL=100
COLLAPSE=2

EXP_H5="expected.h5"
CMUTS_H5="cmuts.h5"
RF_DIR="_rf_count"


pushd ${CASES_DIR} > /dev/null



#
# Profile based on query count
#



if ${QUERIES_SET}; then

    LENGTH=200
    MAX_LENGTH=$((2 * LENGTH))
    REFERENCES=1024

    echo ""
    echo " ─────────────────────────────"
    echo "   THREADS:          $THREADS"
    echo "   REFERENCES:       $REFERENCES"
    echo "   REFERENCE LENGTH: $LENGTH"
    echo " ─────────────────────────────"


    for QUERIES in $((2 ** 6)) $((2 ** 8)) $((2 ** 10)) $((2 ** 12)) $((2 ** 14)) $((2 ** 16)) $((2 ** 18)) $((2 ** 20)); do

        echo "   QUERIES:          $QUERIES"
        echo " ─────────────────────────────"

        SAM="aln_"${REFERENCES}"_"${QUERIES}"_"${LENGTH}".sam"
        BAM="aln_"${REFERENCES}"_"${QUERIES}"_"${LENGTH}".bam"
        FASTA="seq_"${REFERENCES}"_"${QUERIES}"_"${LENGTH}".fasta"

        generate "${REFERENCES}" "${QUERIES}" "${LENGTH}" "${EXP_H5}" "${MIN_MAPQ}" "${MIN_PHRED}" "${MIN_LENGTH}" "${MAX_LENGTH}" "${MAX_INDEL}" "${WINDOW}" "${COLLAPSE}" "${THREADS}"
        profile "${RUNS}" "${FASTA}" "${CMUTS_H5}" "${MIN_MAPQ}" "${MIN_PHRED}" "${WINDOW}" "${MIN_LENGTH}" "${MAX_LENGTH}" "${MAX_INDEL}" "${BAM}" "${RF_DIR}" "${THREADS}" "${LOWMEM}"

        echo " ─────────────────────────────"

    done

fi



#
# Profile based on reference count
#



if ${REFERENCES_SET}; then

    LENGTH=200
    MAX_LENGTH=$((2 * LENGTH))
    QUERIES=1024

    echo ""
    echo " ─────────────────────────────"
    echo "   THREADS:          $THREADS"
    echo "   QUERIES:          $QUERIES"
    echo "   REFERENCE LENGTH: $LENGTH"
    echo " ─────────────────────────────"


    for REFERENCES in $((2 ** 6)) $((2 ** 8)) $((2 ** 10)) $((2 ** 12)) $((2 ** 14)) $((2 ** 16)) $((2 ** 18)) $((2 ** 20)); do

        echo "   REFERENCES:       $REFERENCES"
        echo " ─────────────────────────────"

        SAM="aln_"${REFERENCES}"_"${QUERIES}"_"${LENGTH}".sam"
        BAM="aln_"${REFERENCES}"_"${QUERIES}"_"${LENGTH}".bam"
        FASTA="seq_"${REFERENCES}"_"${QUERIES}"_"${LENGTH}".fasta"

        generate "${REFERENCES}" "${QUERIES}" "${LENGTH}" "${EXP_H5}" "${MIN_MAPQ}" "${MIN_PHRED}" "${MIN_LENGTH}" "${MAX_LENGTH}" "${MAX_INDEL}" "${WINDOW}" "${COLLAPSE}" "${THREADS}"
        profile "${RUNS}" "${FASTA}" "${CMUTS_H5}" "${MIN_MAPQ}" "${MIN_PHRED}" "${WINDOW}" "${MIN_LENGTH}" "${MAX_LENGTH}" "${MAX_INDEL}" "${BAM}" "${RF_DIR}" "${THREADS}" "${LOWMEM}"

        echo " ─────────────────────────────"

    done

fi



#
# Profile based on reference length
#



if ${LENGTHS_SET}; then

    REFERENCES=1024
    QUERIES=1024

    echo ""
    echo " ─────────────────────────────"
    echo "   THREADS:          $THREADS"
    echo "   QUERIES:          $QUERIES"
    echo "   REFERENCES:       $REFERENCES"
    echo " ─────────────────────────────"


    for LENGTH in $((2 ** 4)) $((2 ** 5)) $((2 ** 6)) $((2** 7)) $((2 ** 8)) $((2 ** 9)) $((2 ** 10)); do

        echo "   REFERENCE LENGTH: $LENGTH"
        echo " ─────────────────────────────"

        SAM="aln_"${REFERENCES}"_"${QUERIES}"_"${LENGTH}".sam"
        BAM="aln_"${REFERENCES}"_"${QUERIES}"_"${LENGTH}".bam"
        FASTA="seq_"${REFERENCES}"_"${QUERIES}"_"${LENGTH}".fasta"
        MAX_LENGTH=$((2 * LENGTH))

        generate "${REFERENCES}" "${QUERIES}" "${LENGTH}" "${EXP_H5}" "${MIN_MAPQ}" "${MIN_PHRED}" "${MIN_LENGTH}" "${MAX_LENGTH}" "${MAX_INDEL}" "${WINDOW}" "${COLLAPSE}" "${THREADS}"
        profile "${RUNS}" "${FASTA}" "${CMUTS_H5}" "${MIN_MAPQ}" "${MIN_PHRED}" "${WINDOW}" "${MIN_LENGTH}" "${MAX_LENGTH}" "${MAX_INDEL}" "${BAM}" "${RF_DIR}" "${THREADS}" "${LOWMEM}"

        echo " ─────────────────────────────"

    done

fi



popd > /dev/null

