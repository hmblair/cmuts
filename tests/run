#!/bin/bash

set -eou pipefail

# Check if dependencies are installed
command -v samtools >/dev/null 2>&1 || { echo >&2 "Samtools is required but it's not installed. Exiting."; exit 1; }
command -v mpirun >/dev/null 2>&1 || { echo >&2 "MPI (mpirun) is required but it's not installed. Exiting."; exit 1; }

USE_CRAM=0
while [[ "$#" -gt 0 ]]; do
    case $1 in
        --cram) USE_CRAM=1
                ;;
        *) echo "Unknown option: $1"
           exit 1
           ;;
    esac
    shift
done

# Clean and create working directory
SCRIPT_DIR=$(pwd)
WORK_DIR=${SCRIPT_DIR}"/.tests_tmp"
rm -rf ${WORK_DIR}
mkdir -p ${WORK_DIR}
pushd ${WORK_DIR} > /dev/null

generate_random_number() {
  local min=$1
  local max=$2
  echo $((RANDOM % (max - min + 1) + min))
}

THREADS_MIN=1
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    # Linux OS
    THREADS_MAX=$(nproc)
elif [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS
    THREADS_MAX=$(sysctl -n hw.ncpu)
else
    echo "Unsupported OS type: $OSTYPE"
    exit 1
fi

THREADS=$(generate_random_number $THREADS_MIN $THREADS_MAX)
CHUNKSIZE=$(generate_random_number 1 256)
LENGTH=$(generate_random_number 2 250)
QUERIES=$(generate_random_number 1 512)
REFERENCES=$(generate_random_number 1 64)
MIN_MAPQ=$(generate_random_number 0 30)
MIN_PHRED=$(generate_random_number 0 10)
WINDOW=$(generate_random_number 0 ${LENGTH})
MIN_LENGTH=$(generate_random_number 2 ${LENGTH})
MAX_LENGTH=$(generate_random_number ${LENGTH} $((2 * LENGTH)))
MAX_INDEL=$(generate_random_number 0 ${LENGTH})
COLLAPSE=$(generate_random_number 0 ${LENGTH})

USE_NO_MISMATCHES=$(generate_random_number 0 4)
USE_NO_INSERTIONS=$(generate_random_number 0 4)
USE_NO_DELETIONS=$(generate_random_number 0 4)

if [[ "$USE_NO_MISMATCHES" -eq 4 ]]; then
    NO_MISMATCHES="--no-mismatches"
    NO_MISMATCHES_STR="TRUE"
else
    NO_MISMATCHES=""
    NO_MISMATCHES_STR="FALSE"
fi

if [[ "$USE_NO_INSERTIONS" -eq 4 ]]; then
    NO_INSERTIONS="--no-insertions"
    NO_INSERTIONS_STR="TRUE"
else
    NO_INSERTIONS=""
    NO_INSERTIONS_STR="FALSE"
fi

if [[ "$USE_NO_DELETIONS" -eq 4 ]]; then
    NO_DELETIONS="--no-deletions"
    NO_DELETIONS_STR="TRUE"
else
    NO_DELETIONS=""
    NO_DELETIONS_STR="FALSE"
fi

VERSION=$(cmuts --version)
if [[ "$VERSION" == *"MPI"* ]]; then
    __cmuts="mpirun -np ${THREADS} cmuts"
else
    __cmuts="cmuts"
    THREADS=1
fi

FASTA="seq.fasta"
SAM="aln.sam"
BAM_TMP="aln_tmp.bam"
EXP_H5="expected.h5"
CMUTS_H5="cmuts.h5"

if [[ $USE_CRAM -eq 1 ]]; then
    FILE="aln.cram"
    _IS_CRAM="TRUE"
else
    FILE="aln.bam"
    _IS_CRAM="FALSE"
fi


echo ""
echo "        TEST PARAMETERS"
echo " ─────────────────────────────"
echo "   CRAM:             $_IS_CRAM"
echo "   THREADS:          $THREADS"
echo "   CHUNK SIZE:       $CHUNKSIZE"
echo "   REFERENCE LENGTH: $LENGTH"
echo "   REFERENCES:       $REFERENCES"
echo "   QUERIES:          $QUERIES"
echo "   MIN LENGTH:       $MIN_LENGTH"
echo "   MAX LENGTH:       $MAX_LENGTH"
echo "   MAX INDEL LENGTH: $MAX_INDEL"
echo "   MIN MAPQ:         $MIN_MAPQ"
echo "   MIN PHRED:        $MIN_PHRED"
echo "   QUALITY WINDOW:   $WINDOW"
echo "   COLLAPSE DIST:    $COLLAPSE"
echo "   NO MISMATCHES:    $NO_MISMATCHES_STR"
echo "   NO INSERTIONS:    $NO_INSERTIONS_STR"
echo "   NO DELETIONS:     $NO_DELETIONS_STR"
echo " ─────────────────────────────"

cmuts-generate-tests \
    --length ${LENGTH} \
    --queries ${QUERIES} \
    --references ${REFERENCES} \
    --out-fasta ${FASTA} \
    --out-sam ${SAM} \
    --out-h5 ${EXP_H5} \
    --min-mapq ${MIN_MAPQ} \
    --min-phred ${MIN_PHRED} \
    --min-length ${MIN_LENGTH} \
    --max-length ${MAX_LENGTH} \
    --max-indel-length ${MAX_INDEL} \
    --quality-window ${WINDOW} \
    ${NO_MISMATCHES} \
    ${NO_INSERTIONS} \
    ${NO_DELETIONS} \
    --collapse ${COLLAPSE}

if [[ $USE_CRAM -eq 1 ]]; then
    samtools sort -@${THREADS} -o ${BAM_TMP} ${SAM} > /dev/null 2>&1
    samtools view -T ${FASTA} -C -o ${FILE} ${BAM_TMP} > /dev/null 2>&1
else
    samtools calmd -b -@${THREADS} ${SAM} ${FASTA} > ${BAM_TMP} 2> /dev/null
    samtools sort -@${THREADS} -o ${FILE} ${BAM_TMP} > /dev/null 2>&1
fi

$__cmuts \
    --fasta ${FASTA} \
    --output ${CMUTS_H5} \
    --min-mapq ${MIN_MAPQ} \
    --min-phred ${MIN_PHRED} \
    --quality-window ${WINDOW} \
    --min-length ${MIN_LENGTH} \
    --max-length ${MAX_LENGTH} \
    --max-indel-length ${MAX_INDEL} \
    --collapse ${COLLAPSE} \
    --chunk-size ${CHUNKSIZE} \
    ${NO_MISMATCHES} \
    ${NO_INSERTIONS} \
    ${NO_DELETIONS} \
    ${FILE}

# rf-count \
#     -wt ${THREADS} \
#     -f ${FASTA} \
#     -m \
#     --no-discard-duplicates \
#     --no-cov-low-qual \
#     --right-deletion \
#     --max-collapse-distance 1 \
#     --collapse-consecutive \
#     --max-edit-distance 1.0 \
#     --map-quality ${QUALITY} \
#     --min-quality ${QUALITY} \
#     --median-quality 0 \
#     --discard-shorter ${MIN_LENGTH} \
#     --max-deletion-len ${MAX_INDEL} \
#     ${FILE} > /dev/null

# rf-rctools view rf_count/aln.rc | awk 'NR % 5 == 3' > rf_muts.txt
# rf-rctools view rf_count/aln.rc | awk 'NR % 5 == 4' > rf_cov.txt

python3 ../compare.py ${CMUTS_H5} ${EXP_H5}

popd > /dev/null
