#!/bin/bash

set -eo pipefail

DEBUG=0
MPI_BUILD=0

while [[ $# -gt 0 ]]; do
  case $1 in
    --debug)
      DEBUG=1
      shift
      ;;
    --mpi)
      MPI_BUILD=1
      shift
      ;;
    *)
      echo "Unknown option $1"
      exit 1
      ;;
  esac
done

# Check if dependencies are installed

command -v make >/dev/null 2>&1 || { echo >&2 "Make is required but is not installed. Exiting."; exit 1; }
command -v cmake >/dev/null 2>&1 || { echo >&2 "CMake is required but is not installed. Exiting."; exit 1; }

SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
CODECS_DIR=${SCRIPT_DIR}/htscodecs
BUILD_DIR=${SCRIPT_DIR}/build
BIN_DIR=${SCRIPT_DIR}/bin

# Build htscodecs if not already

if [[ ! -d ${CODECS_DIR}/build ]]; then
  pushd ${SCRIPT_DIR}/htscodecs > /dev/null
  autoreconf -i
  mkdir build
  cd build
  ../configure --prefix="$(pwd)/.."
  make
  make install
  popd > /dev/null
fi

# Clean and create build directory

rm -rf ${BIN_DIR}
mkdir -p ${BUILD_DIR} ${BIN_DIR}

pushd ${BUILD_DIR} > /dev/null

# Run cmake with appropriate options

CMAKE_OPTIONS="-DCMAKE_INSTALL_PREFIX=${SCRIPT_DIR}"
[[ -n "${HDF5_DIR}" ]] && CMAKE_OPTIONS="${CMAKE_OPTIONS} -DHDF5_ROOT=${HDF5_DIR}"
[[ "${DEBUG:-}" == "1" ]] && CMAKE_OPTIONS="${CMAKE_OPTIONS} -DDEBUG=1"
[[ "${MPI_BUILD:-}" == "1" ]] && CMAKE_OPTIONS="${CMAKE_OPTIONS} -DMPI_BUILD=1"
cmake ${CMAKE_OPTIONS} ..

# Build and install project

make
make install

popd > /dev/null

# Post-install steps

ln -s ${SCRIPT_DIR}/src/cmuts-normalize ${BIN_DIR}/cmuts-normalize
ln -s ${SCRIPT_DIR}/src/cmuts-stats ${BIN_DIR}/cmuts-stats
chmod +x ${BIN_DIR}/cmuts-normalize
chmod +x ${BIN_DIR}/cmuts-stats
